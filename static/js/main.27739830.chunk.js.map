{"version":3,"sources":["redux/actions.js","redux/redusers.js","components/TableTd.js","components/TableTdHandler.js","components/TableTr.js","components/TableTrHandler.js","components/Table.js","components/TableHandler.js","App.js","serviceWorker.js","index.js"],"names":["GET_INPUT_ROWS","GET_INPUT_CELS","LOAD","REMOVE","ADD_NEW_ROW","AUGMENT","SUM_MOUSE_ENTER","SUM_MOUSE_LEAVE","BACK","TD_MOUSE_ENTER","TD_MOUSE_LEAVE","increment","generate","rows","cols","array","arr","i","j","id","amount","Math","floor","random","hoverPercent","closeMeaning","_i","_arr","length","o","unshift","calculateColumn","resRow","columns","columnTotal","columnAverage","push","splice","initialState","data","requestData","inputRows","inputCels","TableTd","props","redColorPercent","td","round","react_default","a","createElement","style","background","concat","backgroundColor","onClick","augment","trIndex","tdIndex","onMouseEnter","event","tdMouseEnter","target","innerHTML","onMouseLeave","tdMouseLeave","className","TableTdHandler","connect","state","ownProps","dispatch","newData","Object","toConsumableArray","map","item","index","pop","type","result","TableTr","mySum","tr","components_TableTdHandler","key","sumMouseEnter","sumMouseLeave","remove","TableTrHandler","filter","Table","back","addNewRow","components_TableTrHandler","value","onChange","getInputRows","getInputCels","load","TableHandler","isNaN","trim","rowsValue","celsValue","store","createStore","arguments","undefined","action","objectSpread","App","es","components_TableHandler","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"sPAAaA,EAAiB,iBACjBC,EAAiB,iBACjBC,EAAO,OACPC,EAAS,SACTC,EAAc,cACdC,EAAU,UACVC,EAAkB,kBAClBC,EAAkB,kBAClBC,EAAO,OACPC,EAAiB,iBACjBC,EAAiB,iBAE1BC,EAAY,EAEhB,SAASC,EAASC,EAAMC,EAAMC,GAE5B,IADA,IAAIC,EAAM,GACDC,EAAI,EAAGA,EAAIJ,EAAMI,IAAK,CAC7BD,EAAIC,GAAK,GACT,IAAK,IAAIC,EAAI,EAAGA,EAAIJ,EAAMI,IACxBF,EAAIC,GAAGC,GAAK,CACVC,GAAIR,IACJS,OAAQC,KAAKC,MAAM,IAAAD,KAAKE,UAA8B,IACtDC,aAAc,EACdC,cAAc,GAIpB,QAAAC,EAAA,EAAAC,EAAcX,EAAdU,EAAAC,EAAAC,OAAAF,IAAmB,CAAd,IAAIG,EAACF,EAAAD,GACRX,EAAMe,QAAQD,IAIlB,SAASE,EAAgBhB,GACvB,GAAIA,EAAMa,OAAS,EAAG,CAIpB,IAHA,IAAII,EAAS,GACPC,EAAUlB,EAAM,GAAGa,OAEhBV,EAAI,EAAGA,EAAIe,EAASf,IAAK,CAEhC,IADA,IAAIgB,EAAc,EACTjB,EAAI,EAAGA,EAAIF,EAAMa,OAAQX,IAChCiB,GAAenB,EAAME,GAAGC,GAAGE,OAE7B,IAAIe,EAAgBd,KAAKC,MAAMY,EAAcnB,EAAMa,QACnDI,EAAOI,KAAK,CACVjB,GAAIR,IACJS,OAAQe,EACRX,aAAc,EACdC,cAAc,IAGlBV,EAAMsB,OAAOtB,EAAMa,OAAQI,EAAOJ,OAAQI,ICrC9C,IAAMM,EAAe,CACnBC,KAAM,GACNC,aAAa,EACbC,UAAW,GACXC,UAAW,ICIEC,MAnBf,SAAiBC,GACf,IAAIC,EAAkB,EAItB,OAH8B,IAA1BD,EAAME,GAAGtB,eACXqB,EAAmBxB,KAAK0B,MAAwB,IAAlBH,EAAME,GAAG1B,OAAewB,EAAME,GAAGtB,eAG/DwB,EAAAC,EAAAC,cAAA,MACGC,MAAiC,IAA1BP,EAAME,GAAGtB,aACf,CAAC4B,WAAU,+BAAAC,OAAiCR,EAAjC,gBACX,CAACS,gBAAiB,SACnBC,QAAS,kBAAMX,EAAMY,QAAQZ,EAAMa,QAASb,EAAMc,QAASd,EAAML,OACjEoB,aAAc,SAACC,GAAD,OAAWhB,EAAMiB,aAAaD,EAAME,OAAOC,UAAWnB,EAAML,OAC1EyB,aAAc,kBAAMpB,EAAMqB,aAAarB,EAAML,OAC7C2B,UAAWtB,EAAME,GAAGrB,aAAe,WAAa,IACrB,IAA1BmB,EAAME,GAAGtB,aAAT,GAAA6B,OAAiCR,EAAjC,KAAsDD,EAAME,GAAG1B,SCKvE,IACe+C,EADQC,YAjBvB,SAAyBC,EAAOC,GAC9B,MAAO,CACL/B,KAAM8B,EAAM9B,KACZO,GAAIwB,EAASxB,GACbW,QAASa,EAASb,QAClBC,QAASY,EAASZ,UAItB,SAA4Ba,GAC1B,MAAO,CACLf,QAAS,SAACC,EAASC,EAASnB,GAAnB,OAA4BgC,EHiGlC,SAAiBd,EAASC,EAASnB,GACxC,IAAMiC,EAAUC,OAAAC,EAAA,EAAAD,CAAIlC,GAAMoC,IAAI,SAACC,EAAMC,GAWjC,OAVEA,IAAUpB,GACZmB,EAAKD,IAAI,SAACC,EAAMC,GACd,OAAIA,IAAUnB,GACZkB,EAAKxD,QAAU,EACRwD,GAEAA,IAIJA,IAIT,OAFFJ,EAAQM,MACR/C,EAAgByC,GACP,CACPO,KAAM1E,EACNkC,KAAMiC,GGnHwChB,CAAQC,EAASC,EAASnB,KACxEsB,aAAc,SAACE,EAAWxB,GAAZ,OAAqBgC,EHsJhC,SAAsBR,EAAWxB,GACtC,IAAMiC,EAAUC,OAAAC,EAAA,EAAAD,CAAIlC,GAAMoC,IAAI,SAACC,EAAMC,GAQnC,OAPAD,EAAKD,IAAI,SAACC,GACR,IAAII,EAASjB,EAAYa,EAAKxD,OAC9B,GAAI4D,EAAS,IAAMA,GAAU,GAE3B,OADAJ,EAAKnD,cAAe,EACbmD,IAGJA,IAEP,MAAO,CACPG,KAAMtE,EACN8B,KAAMiC,GGnKsCX,CAAaE,EAAWxB,KACpE0B,aAAc,SAAC1B,GAAD,OAAUgC,EHsKrB,SAAsBhC,GAE3B,IAAMiC,EAAUC,OAAAC,EAAA,EAAAD,CAAIlC,GAAMoC,IAAI,SAACC,EAAMC,GAKnC,OAJAD,EAAKD,IAAI,SAACC,GAEN,OADAA,EAAKnD,cAAe,EACbmD,IAEJA,IAEP,MAAO,CACPG,KAAMrE,EACN6B,KAAMiC,GGjL2BP,CAAa1B,OAI3B6B,CAA6CzB,GCDrDsC,MAjBf,SAAiBrC,GACf,IAAIsC,EAAQ,EACZ,OACElC,EAAAC,EAAAC,cAAA,UACGN,EAAMuC,GAAGR,IAAI,SAACC,EAAMC,GAEnB,OADAK,GAASN,EAAKxD,OACP4B,EAAAC,EAAAC,cAACkC,EAAD,CAAgBtC,GAAI8B,EAAMS,IAAKT,EAAKzD,GAAIuC,QAASmB,EAAOpB,QAASb,EAAMa,YAEhFT,EAAAC,EAAAC,cAAA,MAAIS,aAAc,SAACC,GAAD,OAAWhB,EAAM0C,cAAc1B,EAAME,OAAOC,UAAWnB,EAAMa,QAASb,EAAML,OAC1FyB,aAAc,SAACJ,GAAD,OAAWhB,EAAM2C,cAAc3B,EAAME,OAAOC,UAAWnB,EAAMa,QAASb,EAAML,QACzF2C,GAELlC,EAAAC,EAAAC,cAAA,QAAMK,QAAS,kBAAMX,EAAM4C,OAAO5C,EAAML,KAAMK,EAAMa,WAApD,YCKN,IACegC,EADQrB,YAhBvB,SAAyBC,EAAOC,GAC9B,MAAO,CACL/B,KAAM8B,EAAM9B,KACZ4C,GAAIb,EAASa,GACb1B,QAASa,EAASb,UAItB,SAA4Bc,GAC1B,MAAO,CACLiB,OAAQ,SAACjD,EAAMkB,GAAP,OAAmBc,EL6ExB,SAAgBhC,EAAMkB,GAC3B,IAAMe,EAAUC,OAAAC,EAAA,EAAAD,CAAIlC,GAAMmD,OAAO,SAACd,EAAMC,GAAP,OAAiBA,IAAUpB,IAG1D,OAFFe,EAAQM,MACR/C,EAAgByC,GACP,CACPO,KAAM5E,EACNoC,KAAMiC,GKnF8BgB,CAAOjD,EAAMkB,KACjD6B,cAAe,SAACvB,EAAWN,EAASlB,GAArB,OAA8BgC,ELuH1C,SAAuBR,EAAWN,EAASlB,GAC9C,IAAMiC,EAAUC,OAAAC,EAAA,EAAAD,CAAIlC,GAAMoC,IAAI,SAACC,EAAMC,GAInC,OAHIA,IAAUpB,GACZmB,EAAKD,IAAI,SAAAC,GAAI,OAAIA,EAAKpD,aAAeuC,IAEhCa,IAET,MAAO,CACPG,KAAMzE,EACNiC,KAAMiC,GKhIgDc,CAAcvB,EAAWN,EAASlB,KACxFgD,cAAe,SAACxB,EAAWN,EAASlB,GAArB,OAA8BgC,ELmI1C,SAAuBR,EAAWN,EAASlB,GAC9C,IAAMiC,EAAUC,OAAAC,EAAA,EAAAD,CAAIlC,GAAMoC,IAAI,SAACC,EAAMC,GAInC,OAHIA,IAAUpB,GACZmB,EAAKD,IAAI,SAAAC,GAAI,OAAIA,EAAKpD,aAAe,IAEhCoD,IAET,MAAO,CACPG,KAAMxE,EACNgC,KAAMiC,GK5IgDe,CAAcxB,EAAWN,EAASlB,OAIrE6B,CAA6Ca,GCoBrDU,MArCf,SAAe/C,GACb,OAAKA,EAAMJ,YAePI,EAAMJ,YAENQ,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,mBACflB,EAAAC,EAAAC,cAAA,UAAQ6B,KAAK,SAASxB,QAAS,kBAAMX,EAAMgD,SAA3C,UACA5C,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,cAEAF,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,QAAMK,QAAS,kBAAMX,EAAMiD,UAAUjD,EAAML,KAAMK,EAAMF,aAAvD,YAGHE,EAAML,KAAKoC,IAAI,SAACC,EAAMC,GAAP,OAAiB7B,EAAAC,EAAAC,cAAC4C,EAAD,CAAgBX,GAAIP,EAAMnB,QAASoB,cAb5E,EAbI7B,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,qBACblB,EAAAC,EAAAC,cAAA,qBACEF,EAAAC,EAAAC,cAAA,SAAO6B,KAAK,OAAOgB,MAAOnD,EAAMH,UAAWuD,SAAU,SAACpC,GAAD,OAAWhB,EAAMqD,aAAarC,OAErFZ,EAAAC,EAAAC,cAAA,qBACEF,EAAAC,EAAAC,cAAA,SAAO6B,KAAK,OAAOgB,MAAOnD,EAAMF,UAAWsD,SAAU,SAACpC,GAAD,OAAWhB,EAAMsD,aAAatC,OAErFZ,EAAAC,EAAAC,cAAA,UACE6B,KAAK,SAASxB,QAAS,kBAAMX,EAAMuD,KAAKvD,EAAMH,UAAWG,EAAMF,UAAWE,EAAML,QADlF,YCUR,IACe6D,EADMhC,YAnBrB,SAAyBC,GACvB,MAAO,CACL9B,KAAM8B,EAAM9B,KACZC,YAAa6B,EAAM7B,YACnBC,UAAW4B,EAAM5B,UACjBC,UAAW2B,EAAM3B,YAIrB,SAA4B6B,GAC1B,MAAO,CACL0B,aAAc,SAAArC,GAAK,OAAIW,GPuCEwB,EOvCoBnC,EAAME,OAAOiC,MPwCvDM,MAAMN,GAMF,CACLhB,KAAM/E,EACN+F,MAAO,IAPF,CACLhB,KAAM/E,EACN+F,MAAOA,EAAMO,UAJZ,IAAsBP,GOtCzBG,aAAc,SAAAtC,GAAK,OAAIW,GPoDEwB,EOpDoBnC,EAAME,OAAOiC,MPqDvDM,MAAMN,GAMF,CACLhB,KAAM9E,EACN8F,MAAO,IAPF,CACLhB,KAAM9E,EACN8F,MAAOA,EAAMO,UAJZ,IAAsBP,GOnDzBI,KAAM,SAACI,EAAWC,EAAWjE,GAAvB,OAAgCgC,EPiEnC,SAAcgC,EAAWC,EAAWjE,GAGzC,OAFA3B,EAAS2F,EAAWC,EAAWjE,GAC/BR,EAAgBQ,GACT,CACLwC,KAAM7E,EACNqC,KAAMA,GOtEyC4D,CAAKI,EAAWC,EAAWjE,KAC1EsD,UAAW,SAACtD,EAAMG,GAAP,OAAqB6B,EPmF7B,SAAmBhC,EAAMG,GAC5B,IAAM8B,EAAOC,OAAAC,EAAA,EAAAD,CAAOlC,GAIpB,OAHA3B,EAAS,EAAG8B,EAAW8B,GACrBA,EAAQM,MACR/C,EAAgByC,GACX,CACPO,KAAM3E,EACN2F,MAAOvB,GO1FkCqB,CAAUtD,EAAMG,KACzDkD,KAAM,kBAAMrB,EP8IL,CACPQ,KAAMvE,OO3IW4D,CAA6CuB,GCd5Dc,SAAQC,YPWC,WAAoD,IAA9BrC,EAA8BsC,UAAA/E,OAAA,QAAAgF,IAAAD,UAAA,GAAAA,UAAA,GAAtBrE,EAAcuE,EAAQF,UAAA/E,OAAA,EAAA+E,UAAA,QAAAC,EACjE,OAAQC,EAAO9B,MACb,KAAK/E,EACH,OAAOyE,OAAAqC,EAAA,EAAArC,CAAA,GACFJ,EADL,CAEE5B,UAAWoE,EAAOd,QAEtB,KAAK9F,EACH,OAAOwE,OAAAqC,EAAA,EAAArC,CAAA,GACFJ,EADL,CAEE3B,UAAWmE,EAAOd,QAEtB,KAAK7F,EACH,MAAwB,KAApBmE,EAAM5B,WAAwC,KAApB4B,EAAM3B,UAC3B+B,OAAAqC,EAAA,EAAArC,CAAA,GACFJ,EADL,CAEE7B,aAAa,EACbD,KAAMsE,EAAOtE,OAGRkC,OAAAqC,EAAA,EAAArC,CAAA,GACFJ,EADL,CAEE7B,aAAa,IAGnB,KAAKrC,EACH,OAAOsE,OAAAqC,EAAA,EAAArC,CAAA,GACFJ,EADL,CAEE9B,KAAMsE,EAAOtE,OAEjB,KAAKnC,EACH,OAAOqE,OAAAqC,EAAA,EAAArC,CAAA,GACFJ,EADL,CAEE9B,KAAMsE,EAAOd,QAEf,KAAK1F,EAKL,KAAKC,EAKL,KAAKC,EACH,OAAOkE,OAAAqC,EAAA,EAAArC,CAAA,GACFJ,EADL,CAEE9B,KAAMsE,EAAOtE,OAEjB,KAAK/B,EACH,OAAOiE,OAAAqC,EAAA,EAAArC,CAAA,GACFJ,EADL,CAEE7B,aAAa,EACbD,KAAM,KAEV,KAAK9B,EAKL,KAAKC,EACL,OAAO+D,OAAAqC,EAAA,EAAArC,CAAA,GACEJ,EADT,CAEI9B,KAAMsE,EAAOtE,OAEnB,QACE,OAAO8B,MOpEE0C,MARf,WACE,OACE/D,EAAAC,EAAAC,cAAC8D,EAAA,EAAD,CAAUP,MAAOA,GACfzD,EAAAC,EAAAC,cAAC+D,EAAD,QCFcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOxE,EAAAC,EAAAC,cAACuE,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.27739830.chunk.js","sourcesContent":["export const GET_INPUT_ROWS = 'get_input_rows';\r\nexport const GET_INPUT_CELS = 'get_input_cels';\r\nexport const LOAD = 'load';\r\nexport const REMOVE = 'remove';\r\nexport const ADD_NEW_ROW = 'add_new_row';\r\nexport const AUGMENT = 'augment';\r\nexport const SUM_MOUSE_ENTER = 'sum_mouse_enter';\r\nexport const SUM_MOUSE_LEAVE = 'sum_mouse_leave';\r\nexport const BACK = 'back';\r\nexport const TD_MOUSE_ENTER = 'td_mouse_enter';\r\nexport const TD_MOUSE_LEAVE = 'td_mouse_leave';\r\n\r\nlet increment = 1;\r\n\r\nfunction generate(rows, cols, array) {\r\n  let arr = [];\r\n  for (let i = 0; i < rows; i++) {\r\n    arr[i] = [];\r\n    for (let j = 0; j < cols; j++) {\r\n      arr[i][j] = {\r\n        id: increment++,\r\n        amount: Math.floor(Math.random() * (999 - 100 + 1)) + 100,\r\n        hoverPercent: 0,\r\n        closeMeaning: false,\r\n      }\r\n    }\r\n  }\r\n  for (let o of arr) {\r\n    array.unshift(o);\r\n  }\r\n}\r\n\r\nfunction calculateColumn(array) {\r\n  if (array.length > 0) {\r\n    let resRow = []\r\n    const columns = array[0].length\r\n\r\n    for (let j = 0; j < columns; j++) {\r\n      let columnTotal = 0\r\n      for (let i = 0; i < array.length; i++) {\r\n        columnTotal += array[i][j].amount\r\n      }\r\n      let columnAverage = Math.floor(columnTotal / array.length)\r\n      resRow.push({\r\n        id: increment++,\r\n        amount: columnAverage,\r\n        hoverPercent: 0,\r\n        closeMeaning: false,\r\n      })\r\n    }\r\n    array.splice(array.length, resRow.length, resRow)\r\n  }\r\n}\r\n\r\nexport function getInputRows(value) {\r\n  if (!isNaN(value)) {\r\n    return {\r\n      type: GET_INPUT_ROWS,\r\n      value: value.trim(),\r\n    }\r\n  } else {\r\n    return {\r\n      type: GET_INPUT_ROWS,\r\n      value: '',\r\n    }\r\n  }\r\n};\r\n\r\nexport function getInputSels(value) {\r\n  if (!isNaN(value)) {\r\n    return {\r\n      type: GET_INPUT_CELS,\r\n      value: value.trim(),\r\n    }\r\n  } else {\r\n    return {\r\n      type: GET_INPUT_CELS,\r\n      value: '',\r\n    }\r\n  }\r\n};\r\n\r\nexport function load(rowsValue, celsValue, data) {\r\n  generate(rowsValue, celsValue, data);\r\n  calculateColumn(data)\r\n  return {\r\n    type: LOAD,\r\n    data: data,\r\n  }\r\n};\r\n\r\nexport function remove(data, trIndex) {\r\n  const newData = [...data].filter((item, index) => index !== trIndex);\r\n  newData.pop()\r\n  calculateColumn(newData);\r\n    return {\r\n    type: REMOVE,\r\n    data: newData,\r\n  }\r\n};\r\n\r\nexport function addNewRow(data, inputCels) {\r\n    const newData = [...data]\r\n    generate(1, inputCels, newData);\r\n      newData.pop()\r\n      calculateColumn(newData);\r\n    return {\r\n    type: ADD_NEW_ROW,\r\n    value: newData,\r\n  }\r\n};\r\n\r\nexport function augment(trIndex, tdIndex, data) {\r\n  const newData = [...data].map((item, index) => {\r\n    if (index === trIndex) {\r\n      item.map((item, index) => {\r\n        if (index === tdIndex) {\r\n          item.amount += 1;\r\n          return item;\r\n        } else {\r\n          return item\r\n        }\r\n      })\r\n    }\r\n      return item\r\n  })\r\n  newData.pop()\r\n  calculateColumn(newData);\r\n    return {\r\n    type: AUGMENT,\r\n    data: newData,\r\n  }\r\n};\r\n\r\nexport function sumMouseEnter(innerHTML, trIndex, data) {\r\n    const newData = [...data].map((item, index) => {\r\n      if (index === trIndex) {\r\n        item.map(item => item.hoverPercent = innerHTML)\r\n      }\r\n      return item\r\n    })\r\n    return {\r\n    type: SUM_MOUSE_ENTER,\r\n    data: newData,\r\n  }\r\n};\r\n\r\nexport function sumMouseLeave(innerHTML, trIndex, data) {\r\n    const newData = [...data].map((item, index) => {\r\n      if (index === trIndex) {\r\n        item.map(item => item.hoverPercent = 0)\r\n      }\r\n      return item\r\n    })\r\n    return {\r\n    type: SUM_MOUSE_LEAVE,\r\n    data: newData,\r\n  }\r\n};\r\n\r\nexport function back() {\r\n    return {\r\n    type: BACK,\r\n  }\r\n};\r\n\r\nexport function tdMouseEnter(innerHTML, data) {\r\n  const newData = [...data].map((item, index) => {\r\n    item.map((item) => {\r\n      let result = innerHTML - item.amount;\r\n      if (result < 50 && result > -50) {\r\n        item.closeMeaning = true\r\n        return item\r\n      }\r\n    })\r\n    return item\r\n  })\r\n    return {\r\n    type: TD_MOUSE_ENTER,\r\n    data: newData,\r\n  }\r\n};\r\n\r\nexport function tdMouseLeave(data) {\r\n\r\n  const newData = [...data].map((item, index) => {\r\n    item.map((item) => {\r\n        item.closeMeaning = false\r\n        return item\r\n    })\r\n    return item\r\n  })\r\n    return {\r\n    type: TD_MOUSE_LEAVE,\r\n    data: newData,\r\n  }\r\n};\r\n","import {\r\n  GET_INPUT_ROWS,\r\n  GET_INPUT_CELS,\r\n  LOAD, REMOVE,\r\n  ADD_NEW_ROW,\r\n  AUGMENT,\r\n  SUM_MOUSE_ENTER,\r\n  SUM_MOUSE_LEAVE,\r\n  BACK,\r\n  TD_MOUSE_ENTER,\r\n  TD_MOUSE_LEAVE,\r\n} from './actions';\r\n\r\nconst initialState = {\r\n  data: [],\r\n  requestData: false,\r\n  inputRows: '',\r\n  inputCels: '',\r\n}\r\n\r\nexport default function getNextState(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_INPUT_ROWS:\r\n      return {\r\n        ...state,\r\n        inputRows: action.value,\r\n      };\r\n    case GET_INPUT_CELS:\r\n      return {\r\n        ...state,\r\n        inputCels: action.value,\r\n      };\r\n    case LOAD:\r\n      if (state.inputRows !== '' && state.inputCels !== '') {\r\n        return {\r\n          ...state,\r\n          requestData: true,\r\n          data: action.data,\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          requestData: false,\r\n        }\r\n      }\r\n    case REMOVE:\r\n      return {\r\n        ...state,\r\n        data: action.data,\r\n      };\r\n    case ADD_NEW_ROW:\r\n      return {\r\n        ...state,\r\n        data: action.value,\r\n        };\r\n      case AUGMENT:\r\n        return {\r\n          ...state,\r\n          data: action.data,\r\n          };\r\n      case SUM_MOUSE_ENTER:\r\n        return {\r\n          ...state,\r\n          data: action.data,\r\n        };\r\n      case SUM_MOUSE_LEAVE:\r\n        return {\r\n          ...state,\r\n          data: action.data,\r\n        };\r\n      case BACK:\r\n        return {\r\n          ...state,\r\n          requestData: false,\r\n          data: [],\r\n        };\r\n      case TD_MOUSE_ENTER:\r\n        return {\r\n          ...state,\r\n          data: action.data,\r\n        };\r\n      case TD_MOUSE_LEAVE:\r\n      return {\r\n            ...state,\r\n          data: action.data,\r\n        };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nfunction TableTd(props) {\r\n  let redColorPercent = 0;\r\n  if (props.td.hoverPercent !== 0) {\r\n    redColorPercent =  Math.round(props.td.amount * 100 / props.td.hoverPercent);\r\n  }\r\n  return (\r\n    <td\r\n       style={props.td.hoverPercent !== 0 ?\r\n        {background: `linear-gradient(to top, red ${redColorPercent}%, white 0)`} :\r\n        {backgroundColor: 'white'}}\r\n       onClick={() => props.augment(props.trIndex, props.tdIndex, props.data)}\r\n       onMouseEnter={(event) => props.tdMouseEnter(event.target.innerHTML, props.data)}\r\n       onMouseLeave={() => props.tdMouseLeave(props.data)}\r\n       className={props.td.closeMeaning ? 'redColor' : ''}>\r\n       {props.td.hoverPercent !== 0 ? `${redColorPercent}%` : props.td.amount}\r\n    </td>\r\n  )\r\n}\r\n\r\nexport default TableTd;\r\n","import { connect } from 'react-redux';\r\nimport TableTd from './TableTd';\r\nimport { augment, tdMouseEnter, tdMouseLeave } from '../redux/actions';\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n  return {\r\n    data: state.data,\r\n    td: ownProps.td,\r\n    trIndex: ownProps.trIndex,\r\n    tdIndex: ownProps.tdIndex,\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    augment: (trIndex, tdIndex, data) => dispatch(augment(trIndex, tdIndex, data)),\r\n    tdMouseEnter: (innerHTML, data) => dispatch(tdMouseEnter(innerHTML, data)),\r\n    tdMouseLeave: (data) => dispatch(tdMouseLeave(data)),\r\n  }\r\n}\r\n\r\nconst TableTdHandler = connect(mapStateToProps, mapDispatchToProps)(TableTd);\r\nexport default TableTdHandler\r\n","import React from 'react';\r\nimport TableTdHandler from './TableTdHandler';\r\n\r\nfunction TableTr(props) {\r\n  let mySum = 0;\r\n  return (\r\n    <tr>\r\n      {props.tr.map((item, index) => {\r\n        mySum += item.amount\r\n        return <TableTdHandler td={item} key={item.id} tdIndex={index} trIndex={props.trIndex}/>\r\n      })}\r\n      <td onMouseEnter={(event) => props.sumMouseEnter(event.target.innerHTML, props.trIndex, props.data)}\r\n          onMouseLeave={(event) => props.sumMouseLeave(event.target.innerHTML, props.trIndex, props.data)}>\r\n          {mySum}\r\n      </td>\r\n      <span onClick={() => props.remove(props.data, props.trIndex)}>&#10006;</span>\r\n    </tr>\r\n  )\r\n}\r\n\r\nexport default TableTr;\r\n","import { connect } from 'react-redux';\r\nimport TableTr from './TableTr';\r\nimport { remove, sumMouseEnter, sumMouseLeave } from '../redux/actions';\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n  return {\r\n    data: state.data,\r\n    tr: ownProps.tr,\r\n    trIndex: ownProps.trIndex,\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    remove: (data, trIndex) => dispatch(remove(data, trIndex)),\r\n    sumMouseEnter: (innerHTML, trIndex, data) => dispatch(sumMouseEnter(innerHTML, trIndex, data)),\r\n    sumMouseLeave: (innerHTML, trIndex, data) => dispatch(sumMouseLeave(innerHTML, trIndex, data)),\r\n  }\r\n}\r\n\r\nconst TableTrHandler = connect(mapStateToProps, mapDispatchToProps)(TableTr);\r\nexport default TableTrHandler;\r\n","import React from 'react';\r\nimport TableTrHandler from './TableTrHandler';\r\n\r\nfunction Table(props) {\r\n  if (!props.requestData) {\r\n    return (\r\n      <div className=\"initial-container\">\r\n        <label>Rows:\r\n          <input type=\"text\" value={props.inputRows} onChange={(event) => props.getInputRows(event)}/>\r\n        </label>\r\n        <label>Cels:\r\n          <input type=\"text\" value={props.inputCels} onChange={(event) => props.getInputCels(event)}/>\r\n        </label>\r\n        <button\r\n          type=\"button\" onClick={() => props.load(props.inputRows, props.inputCels, props.data)}>&#10148;\r\n        </button>\r\n      </div>\r\n    )\r\n  }\r\n  if (props.requestData) {\r\n    return(\r\n      <div className=\"table-container\">\r\n      <button type=\"button\" onClick={() => props.back()}>&#8617;</button>\r\n      <table>\r\n        <thead>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>\r\n              <span onClick={() => props.addNewRow(props.data, props.inputCels)}>&#10010;</span>\r\n            </td>\r\n          </tr>\r\n          {props.data.map((item, index) => <TableTrHandler tr={item} trIndex={index}/>)}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Table;\r\n","import { connect } from 'react-redux';\r\nimport Table from './Table';\r\nimport { getInputRows, getInputSels, load, addNewRow, back } from '../redux/actions';\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    data: state.data,\r\n    requestData: state.requestData,\r\n    inputRows: state.inputRows,\r\n    inputCels: state.inputCels,\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    getInputRows: event => dispatch(getInputRows(event.target.value)),\r\n    getInputCels: event => dispatch(getInputSels(event.target.value)),\r\n    load: (rowsValue, celsValue, data) => dispatch(load(rowsValue, celsValue, data)),\r\n    addNewRow: (data, inputCels) => dispatch(addNewRow(data, inputCels)),\r\n    back: () => dispatch(back()),\r\n  }\r\n}\r\n\r\nconst TableHandler = connect(mapStateToProps, mapDispatchToProps)(Table);\r\nexport default TableHandler;\r\n","import React from 'react';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport getNextState from './redux/redusers';\nimport TableHandler from './components/TableHandler';\n\n\nimport './App.css';\n\nconst store = createStore(getNextState);\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <TableHandler />\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}